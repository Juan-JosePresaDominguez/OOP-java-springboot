spring:
  application.name: AccountsService
  #profiles.active: dev
  profiles.active: prod
  # Cargar múltiples data.sql en Spring Boot ------------------
#  sql:
#    init:
#      #data-locations: import_H2_data.sql,MySQL_data.sql
#      data-locations:
#        classpath: import_*_data.sql

server:
  servlet.contextPath: /api

---
# Acceso BB.DD. H2 dev --> http://localhost:9900/h2-ui
spring:
  config.activate.on-profile: dev
  sql.init.mode: always
  datasource:
    url: "jdbc:h2:mem:accountsdb"
    driverClassName: org.h2.Driver
    username: sa
    #password: password     # Deshabilitada para pruebas
    password:
  jpa:
    show-sql: true
    database-platform: org.hibernate.dialect.H2Dialect
    hibernate:
      ddl-auto: create-drop
      generate-ddl: true
    defer-datasource-initialization: true
  h2:
    console.enabled: true
    console.path: /h2-ui

server.port: 9900

---
# Acceso BB.DD. MySQL prod--> http://localhost:9943
spring:
  config.activate.on-profile: prod
  sql.init.mode: always
  datasource:
    url: "jdbc:mysql://127.0.0.1:3306/accounts_db"
    driverClassName: com.mysql.cj.jdbc.Driver
    username: account_user
    password: acc123
  jpa:
    show-sql: true
    database-platform: org.hibernate.dialect.MySQL5Dialect
    hibernate:
      # No utilizar 'create-drop' en producción. Eliminará su base de datos después de que se detenga la aplicación.
      ddl-auto: update
      generate-ddl: true
    defer-datasource-initialization: true

server.port: 9943